/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import database.Connect;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hasini
 */
public class SalesLedger extends javax.swing.JInternalFrame {

    /**
     * Creates new form SalesLedger
     */
    private DefaultTableModel dtm;
    public SalesLedger() {
        initComponents();
                dtm = (DefaultTableModel) jTable1.getModel();
                method();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "Title 13", "Title 14"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

void method (){
    Connect c = new Connect();
    
//    String query1=  " SELECT purchase_order.purchase_order_id,  "
//                    + "purchase_order_has_item.item_item_code, purchase_order_has_item.quantity "
////                    
//                    + "FROM purchase_order "
//                    + " INNER JOIN  purchase_order_has_item"
//                    + "ON  purchase_order.purchase_order_id =purchase_order_has_item.purchase_order_purchase_order_id";
////                    + "ON purchase_order_has_item.item_item_code = item.item_code) "
//                   
////                   +"WHERE purchase_order.purchase_order_id= "+Ordern+"  ";
//    
//                    String query1="SELECT purchase_order_has_item.item_item_code, purchase_order_has_item.quantity, "
                    String query1="SELECT purchase_order.purchase_order_id,purchase_order_has_item.item_item_code, purchase_order_has_item.quantity "

//                    + "purchase_order.purchase_order_id "
                    + "FROM purchase_order "
                    + " INNER JOIN  purchase_order_has_item"
//                    + "ON purchase_order_has_item.item_item_code = item.item_code) "
                    + "ON  purchase_order.purchase_order_id = purchase_order_has_item.purchase_order_purchase_order_id ";
//                   +"WHERE purchase_order.purchase_order_id= "+Ordern+"  ";

            
            ResultSet reset = c.getQuery(query1);
            dtm.setRowCount(0);
            try {
                while(reset.next()){

                
//                String itemname = reset.getString("item_name");
                int itemid = reset.getInt("item_item_code");
                int itemqty = reset.getInt("quantity");


                dtm.addRow(new Object[]{ itemid,itemqty });
                }
            } catch (SQLException ex) {
                Logger.getLogger(ViewPurchaseOrder.class.getName()).log(Level.SEVERE, null, ex);
            }     

}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
