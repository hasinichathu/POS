/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import database.Connect;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hasini
 */
public class SalesSummery extends javax.swing.JInternalFrame {

    /**
     * Creates new form SalesSummery
     */
    private DefaultTableModel dtm;
    public SalesSummery() {
        initComponents();
        dtm = (DefaultTableModel) jTable1.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fromDateTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        toDateTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        fromDateCso = new com.toedter.calendar.JDateChooser();
        toDateCso = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        costOfAllGoodsTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        RevenueTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ProfitTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);

        jPanel3.setBackground(new java.awt.Color(17, 153, 148));

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel6.setText("Sales Summery");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(396, 396, 396)
                .addComponent(jLabel6)
                .addContainerGap(496, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setText("from Date");

        jLabel2.setText("to date");

        jButton1.setText("Calculate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(fromDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(fromDateCso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(toDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toDateCso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toDateCso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromDateCso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(toDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addComponent(fromDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("Basket Value");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 380, -1, -1));

        costOfAllGoodsTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costOfAllGoodsTxtActionPerformed(evt);
            }
        });
        jPanel1.add(costOfAllGoodsTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 380, 130, -1));

        jLabel4.setText("Revenue");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, -1, -1));
        jPanel1.add(RevenueTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 380, 130, -1));

        jLabel5.setText("Gross profit");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 380, -1, -1));

        ProfitTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfitTxtActionPerformed(evt);
            }
        });
        jPanel1.add(ProfitTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 380, 130, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "item id", "item name", "quantity", "unit retail price", "unit buying price", "discount", "total revenue", "total cost"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 960, 340));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 990, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 485, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void costOfAllGoodsTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costOfAllGoodsTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costOfAllGoodsTxtActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        java.sql.Date sqldate = new java.sql.Date(fromDateCso.getDate().getTime());
          DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
          String fromDate = df.format(sqldate);
          
          java.sql.Date sqldate2 = new java.sql.Date(toDateCso.getDate().getTime());
          DateFormat df2 = new SimpleDateFormat("yyyy-MM-dd");
          String toDate = df2.format(sqldate2);
          
//        String fromDate = fromDateTxt.getText().trim();
//        String toDate = toDateTxt.getText().trim();
//        
//        dtm.setRowCount(0);
//        if ("".equals(toDate)){
//            toDate=fromDate;
//        }else{
//        
//        }
        
    int r =0;
     
        Connect c = new Connect(); 
        String query = "SELECT  invoice.date, "
                + "invoice_has_item.item_item_code, invoice_has_item.quantity, invoice_has_item.unit_price  "
                + "FROM invoice INNER JOIN invoice_has_item ON invoice.invoice_id  = invoice_has_item.invoice_invoice_id "
                + "WHERE invoice.date BETWEEN  '"+fromDate+"' AND '"+toDate+"' " ; 

        ResultSet reset = c.getQuery(query);
        
        try {
            while(reset.next()){

            int quantity = reset.getInt("quantity");
            int unitprice = reset.getInt("unit_price");
            int total =unitprice * quantity;
            int id =reset.getInt("item_item_code");
               
            r = r + total;
                        
            int i;
            boolean found = false;
            for (i = 0; i < jTable1.getRowCount(); i++) {
            String tabID = jTable1.getValueAt(i, 0).toString();
            String idd = Integer.toString(id);
                if (idd.equals(tabID)) {
                    found = true;
                    break;
                }
            }
            
            if (found) {
                double oldQty = Double.parseDouble(jTable1.getValueAt(i, 2). toString());
                double newQty = oldQty + quantity;
                jTable1.setValueAt("" + newQty, i, 2);
                
                double oldtotal = Double.parseDouble(jTable1.getValueAt(i, 6).toString());
                double newtotal = oldtotal + total;
                jTable1.setValueAt("" + newtotal, i, 6);
                
            } else {
                int col2 =0;
                int col3 =0;
                int col4 =0;
                dtm.addRow(new Object[]{ id,col2,quantity,unitprice,col3,col4,total });   
            }
           
        }
        } catch (SQLException ex) {
            Logger.getLogger(ItemViwe.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String query2="SELECT buying_price, item_item_code, discount  FROM stock_has_item  ";
            double distotal=0;
            double costofgoods= 0;
            ResultSet reset2 = c.getQuery(query2);
        try {
            while(reset2.next()){
                int itemid = reset2.getInt("item_item_code");
                int bprice = reset2.getInt("buying_price");
                int dis = reset2.getInt("discount");
                
                int n;
                boolean found1 = false;
                for (n = 0; n < jTable1.getRowCount(); n++) {
                    String tabID = jTable1.getValueAt(n, 0).toString();
                    String idd = Integer.toString(itemid);
                    if (idd.equals(tabID)) {
                        found1 = true;
                        break;
                    }
                }
                    if(found1){
                    
                    jTable1.setValueAt("" + bprice, n, 4);
                    jTable1.setValueAt("" + dis, n, 5);
                }
                    double qty1 =Double.parseDouble(jTable1.getValueAt(n, 2).toString());
//                    String q =jTable1.getValueAt(n, 2).toString();
//                    System.out.println(q);
                    double bpricetab = Double.parseDouble(jTable1.getValueAt(n, 4). toString());
                    double subtotal = Double.parseDouble(jTable1.getValueAt(n, 6). toString());
                       
                    
                    Double totalcost = qty1 * bpricetab;
                    jTable1.setValueAt("" + totalcost, n, 7);
                    costofgoods = costofgoods + totalcost;
                    String cost = Double.toString(costofgoods);
                    costOfAllGoodsTxt.setText(cost);
                    
                    Double fintotal = subtotal-(qty1 * dis);
                    jTable1.setValueAt("" + fintotal, n, 6);
                    
                    distotal=distotal+(dis* qty1);
                    Double finaltotal= r-distotal;
                    String re = Double.toString(finaltotal);
                    RevenueTxt.setText(re);
//    
            }
        } catch (SQLException ex) {
            Logger.getLogger(SalesSummery.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String query3="SELECT item_code, item_name  FROM item  ";
        ResultSet reset3 = c.getQuery(query3);
        
        try {
            while(reset3.next()){
                int itemid = reset3.getInt("item_code");
                String name = reset3.getString("item_name");
                
                int g;
                boolean found2 = false;
                for (g = 0; g < jTable1.getRowCount(); g++) {
                    String tabID = jTable1.getValueAt(g, 0).toString();
                    String idd = Integer.toString(itemid);
                    if (idd.equals(tabID)) {
                        found2 = true;
                        break;
                    }
                }
                if(found2){
                    
                    jTable1.setValueAt("" + name, g, 1);
                    
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(SalesSummery.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ProfitTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfitTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProfitTxtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ProfitTxt;
    private javax.swing.JTextField RevenueTxt;
    private javax.swing.JTextField costOfAllGoodsTxt;
    private com.toedter.calendar.JDateChooser fromDateCso;
    private javax.swing.JTextField fromDateTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.toedter.calendar.JDateChooser toDateCso;
    private javax.swing.JTextField toDateTxt;
    // End of variables declaration//GEN-END:variables
}
